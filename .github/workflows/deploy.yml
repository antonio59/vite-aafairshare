name: Deploy to Firebase

on:
  push:
    branches:
      - develop
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Determine environment
      id: determine-env
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "environment=production" >> $GITHUB_OUTPUT
        else
          echo "environment=staging" >> $GITHUB_OUTPUT
        fi

    - name: Copy environment file
      run: |
        if [[ "${{ steps.determine-env.outputs.environment }}" == "production" ]]; then
          cp .env.production .env
          cp serviceAccountKey.json firebase-service-account.json
        else
          cp .env.staging .env
          cp serviceAccountKey.staging.json firebase-service-account.json
        fi

    - name: Build
      run: npm run build
      
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: 'firebase-service-account.json'
        channelId: live
        projectId: ${{ (steps.determine-env.outputs.environment == 'production') && secrets.FIREBASE_PROD_PROJECT_ID || secrets.FIREBASE_STAGING_PROJECT_ID }} 