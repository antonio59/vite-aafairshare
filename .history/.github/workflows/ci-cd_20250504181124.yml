name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
      - 'feature/**'
      - 'bugfix/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/dependency-updates.yml'
  pull_request:
    branches:
      - main
      - staging
      - 'feature/**'
      - 'bugfix/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/dependency-updates.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

# Ensure we don't have concurrent deployments to the same environment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup-and-test:
    name: Setup and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run Tests
        run: |
          npm run lint
          npm run typecheck || echo "Type check completed with warnings"
          npm test
        
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: repo-snapshot
          path: |
            .
            !node_modules
            !.git
  
  build-and-deploy:
    name: Build and Deploy
    needs: setup-and-test
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
      - name: Download Repo Snapshot
        uses: actions/download-artifact@v4
        with:
          name: repo-snapshot
          path: .
      
      - name: Set Environment
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> "$GITHUB_OUTPUT"
          else
            echo "environment=staging" >> "$GITHUB_OUTPUT"
          fi

      - name: Copy Environment Files
        run: |
          if [[ "${{ steps.set-env.outputs.environment }}" == "production" ]]; then
            cp .env.production .env
            export GOOGLE_APPLICATION_CREDENTIALS=./serviceAccountKey.json
            echo '{
              "projects": {
                "default": "aafairshare-37271"
              }
            }' > .firebaserc
          else
            cp .env.staging .env
            export GOOGLE_APPLICATION_CREDENTIALS=./serviceAccountKey.staging.json
            echo '{
              "projects": {
                "default": "aafairshare---staging"
              }
            }' > .firebaserc
          fi
      
      - name: Debug Firebase Config
        run: |
          echo "Using .firebaserc:"
          cat .firebaserc
          echo "Using GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"

      - name: Build
        run: npm run build:${{ steps.set-env.outputs.environment }}

      - name: Deploy to Firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.set-env.outputs.environment == 'production' && './serviceAccountKey.json' || './serviceAccountKey.staging.json' }}
        run: npm exec firebase deploy --only hosting

      - name: Deployment Status
        run: |
          echo "### ðŸš€ Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "* Environment: ${{ steps.set-env.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "* Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "* Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY 